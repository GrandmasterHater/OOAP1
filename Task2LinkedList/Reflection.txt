2.2. Ответы совпадают. Отметил для себя дополнение о том, что при проектировании АТД нужно учитывать эффективность реализации, но не зацикливаться на ней (не думать о том как это написать на конкретном языке), а рассуждать в контексте составления набора команд.

2.3. Ответы схожи.

2.1. 

Конструктор: определение и постусловия совпадают. Единственное отличие в том, что определён как комментарий из-за ограничений языка.


Команды:

- head: Пред и постусловие совпадают с эталоном.

- tail: Пред и постусловие совпадают с эталоном.

- right: По смыслу пред и постусловия совпадают с эталоном.

- put_right: По смыслу пред и постусловия совпадают с эталоном.

- put_left: По смыслу пред и постусловия совпадают с эталоном.

- add_to_empty: По смыслу пред и постусловия совпадают с эталоном.

- remove: По смыслу пред и постусловия совпадают с эталоном.

- clear: По смыслу пред и постусловия совпадают с эталоном.

- add_tail: Постусловие совпадает с эталоном. Но в моём ответе есть предусловие ограничивающее использование метода. Предполагал, что нельзя добавлять элементы в список не вызвав предварительно add_to_empty.

- remove_all: По смыслу постусловие совпадает с эталоном.

- replace: По смыслу пред и постусловия совпадают с эталоном.

- find: Постусловие совпадает с эталоном. Есть различие с эталоном, предполагал что для работы метода курсор должен быть установлен. Возможно, также, не ошибка.


Запросы: запросы распределены верно. Также предусловие для get совпадает с эталоном.


Дополнительные запросы: дополнительные запросы в основном также совпадают. Есть небольшое отличие связанное с add_tail - поскольку у меня есть предусловие для него, то для него также есть и дополнительный запрос статуса.