    Общую идею с частично реализованным классом понял - создаётся АТД который определяет основной набор операций и их частичные реализации, а далее каждый наследник дополняет его своим функционалом. 

    Старался в реализации воссоздать идею - создал абстрактный класс ParentList, в котором описан АТД. Реализации конструктора, команд и запросов в данном случае уже исполнены в виде виртуальных методов. 

    Что сделано не правильно: поскольку смешал описание АТД и реализацию, то в наследниках уже думал больше про реализацию, а не описание АТД, поэтому забыл описать конструкторы ParentList и TwoWayList. 
Еще была идея явно определить ParentList и TwoWayList как абстрактные классы для описания АТД, но отмёл эту идею т.к. посчитал, что будет слишком много лишних объектов в реализации, хотя. В данном случае, 
возможно, поможет опыт и больший контроль этапов - научиться разделять этапы описания АТД и реализации, оставаться на уровне абстракции и не срываться в реализацию независимо от того каким способом описан АТД.

    Что сделано правильно: описание АТД TwoWayList за исключением конструктора. Пред и постусловия операции left по смыслу совпадают. Статус определён верно. 
    
    
